const WebSocket=require('ws'),http2=require('http2'),fs=require('fs');
const config={
  token:"",
  serverid:""
};let guilds={},lastSeq=null,hbInterval=null,mfaToken=null,lastMfaFileTime=0;
function safeExtract(d){if(typeof d!=='string')try{return JSON.stringify(d)}catch(e){return null}try{return JSON.parse(d)}catch(e){const m=d.match(/{[^{}]*}|\[[^\[\]]*\]/g);if(m&&m.length)for(const j of m)try{return JSON.parse(j)}catch(e){}return null}}
function readMfaToken(){try{const s=fs.statSync('mfa_token.txt');if(mfaToken&&s.mtimeMs<=lastMfaFileTime)return mfaToken;lastMfaFileTime=s.mtimeMs;const t=fs.readFileSync('mfa_token.txt','utf8').trim();if(t){if(t!==mfaToken)console.log(`MFA Token: ${t}`);mfaToken=t}return mfaToken}catch(e){console.log('MFA Token okunamadı:', e.message);return mfaToken}}
async function req(m,p,b=null){return new Promise(r=>{const client=http2.connect('https://canary.discord.com',{settings:{enablePush:false}});client.on('error',()=>{r('{}');client.close()});const h={':method':m,':path':p,':authority':'canary.discord.com',':scheme':'https','authorization':config.token,'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36','x-super-properties':'eyJvcyI6IldpbmRvd3MiLCJicm93c2VyIjoiQ2hyb21lIiwiZGV2aWNlIjoiIiwic3lzdGVtX2xvY2FsZSI6InRyLVRSIiwiY2xpZW50X21vZHMiOmZhbHNlLCJicm93c2VyX3VzZXJfYWdlbnQiOiJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTMyLjAuMC4wIFNhZmFyaS81MzcuMzYiLCJicm93c2VyX3ZlcnNpb24iOiIxMzIuMC4wLjAiLCJvc192ZXJzaW9uIjoiMTAifQ=='};if(mfaToken){h['x-discord-mfa-authorization']=mfaToken;h['cookie']=`__Secure-recent_mfa=${mfaToken}`;}if(b){h['content-type']='application/json';h['content-length']=Buffer.byteLength(b);}const req=client.request(h);let data='';req.on('response',(headers)=>{req.setEncoding('utf8');req.on('data',chunk=>data+=chunk);req.on('end',()=>{if(!data){r('{}');return client.close()}try{let d=JSON.parse(data);if(p.includes('/vanity-url'))console.log(`URL işlemi [${headers[':status']}]:`, data);r(d)}catch(e){if(!p.includes('/vanity-url')){const ext=safeExtract(data);if(ext){r(ext);return client.close()}}r(data)}client.close()})});req.on('error',(e)=>{console.log('İstek hatası:', e.message);r('{}');client.close()});if(b)req.write(b);req.end();setTimeout(()=>{if(!client.closed){r('{}');client.close()}},1000)});}
function connect(){req("GET","/api/v7/gateway").then(res=>{let url;try{url=res?.url}catch(e){const ext=safeExtract(res);if(ext)try{url=ext?.url}catch(e){}}const ws=new WebSocket(url||"wss://gateway.discord.gg/?v=7&encoding=json");ws.on("open",()=>ws.send(JSON.stringify({op:2,d:{token:config.token,intents:513,properties:{$os:'linux',$browser:'firefox',$device:'zante'}}})));ws.on("message",async d=>{try{let p;try{p=typeof d==='string'?JSON.parse(d):JSON.parse(d.toString())}catch(e){const j=safeExtract(d.toString());if(j)p=JSON.parse(j);else return}if(p.s)lastSeq=p.s;if(p.op===10){clearInterval(hbInterval);hbInterval=setInterval(()=>ws.send(JSON.stringify({op:1,d:lastSeq})),p.d.heartbeat_interval)}if(p.t==="READY"){p.d.guilds.filter(g=>g.vanity_url_code).forEach(g=>guilds[g.id]=g.vanity_url_code);console.log('i watch:',JSON.stringify(guilds));}if(p.t==="GUILD_UPDATE"){const id=p.d.id||p.d.guild_id,old=guilds[id],nw=p.d.vanity_url_code;if(old&&old!==nw){readMfaToken();if(mfaToken){Promise.all([
          req("PATCH",`/api/v7/guilds/${config.serverid}/vanity-url`,JSON.stringify({code:old})),
          req("PATCH",`/api/v7/guilds/${config.serverid}/vanity-url`,JSON.stringify({code:old}))
        ]).then(() => console.log(`ok: ${old}`))
        .catch(e => console.log('hata:', e.message));
      }}if(nw)guilds[id]=nw;else if(guilds[id])delete guilds[id];}}catch(e){console.log('WebSocket işleme hatası:', e.message)}});ws.on("close",()=>{clearInterval(hbInterval);setTimeout(connect,5000)});ws.on("error",(e)=>{console.log('WebSocket hatası:', e.message);ws.close();});}).catch((e)=>{console.log('Gateway hatası:', e.message);setTimeout(connect,5000)});}
(async()=>{readMfaToken();console.log('MFA Token:', mfaToken);connect();setInterval(readMfaToken,30000)})();process.on('uncaughtException',(e)=>{console.log('Kritik hata:', e.message)});


// zante tarafından kodlanmıştır.